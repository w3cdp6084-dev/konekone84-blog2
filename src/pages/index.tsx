import { useState } from "react";
import Head from "next/head";
import { getAllPublished } from "../../lib/notion";
import useSWR from "swr";
import axios from "axios";
import Date from "../../components/convertdate";
import Link from "next/link";
import Image from "next/image";

const fetcher = async (url) => {
  if (!url) return null;
  const response = await axios.get(url);
  if (response.data.type === "external") {
    return response.data.url;
  } else if (response.data.type === "file") {
    return response.data.file.url;
  }
  return null;
};

export const getStaticProps = async () => {
  const data = await getAllPublished();
  console.log(data); // データをログ出力

  return {
    props: {
      posts: data,
    },
    revalidate: 60,
  };
};

export default function Home({ posts }) {
  const [loading, setLoading] = useState(false);
  console.log(posts); // データをログ出力

  // postsが存在しない場合でも、useSWRは呼び出されます。
  const { data: imageUrl, error } = useSWR(posts?.thumbnail, fetcher);

  // postsが存在しない場合、ここでレンダリングを終了します。
  if (!posts) return <h1>No posts</h1>;

  return (
    <div>
      <Head>
        <title>Notion API & Next.js</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="lg:container mx-auto px-2">
          <h1 className="mb-3">Notion API & Next.js</h1>
          <div
            itemLayout="vertical"
            size="large"
            loading={loading}
            pagination={{
              onChange: (page) => {
                console.log(page + "ページ目です");
              },
              pageSize: 3,
            }}
          >
            {posts.map((post, index) => {
              if (!post) {
                return <div>投稿が見つかりません</div>;
              }
              return (
                <div key={index}>
                  <div className="flex gap-x-5">
                    <div className="w-[150px]">
                      <Image
                        preview={true}
                        width={150}
                        height={150}
                        alt={post.title}
                        src={post.thumbnail || "/noimg.jpg"}
                        fallback="/noimg.jpg"
                        style={{ objectFit: "cover" }}
                      />
                    </div>
                    <div className="flex-1">
                      <div className="space-y-[0.5rem]">
                        <h2 className="text-xl">
                          <p>{post.title}</p>
                        </h2>
                        <div>
                          <p className="flex items-center space-x-1"><Date convertDate={post.date}></Date></p>
                          <p className="flex items-center space-x-1"><Date convertDate={post.last_edited_time}></Date></p>
                        </div>
                        {post.description && (
                          <p className="whitespace-break-spaces bg-white rounded w-fit p-3">{post.description}</p>
                        )}
                        <Link href={`/posts/${post.slug}`} className="inline-block">More</Link>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </main>
    </div>
  );
}